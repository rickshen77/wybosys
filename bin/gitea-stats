#!/usr/bin/env python3

import asyncio
import sys
import json
from pyppeteer import launch, browser, page
import urllib.parse


def CapacityStrToMB(v: str) -> float:
    r = 0
    if v.endswith('MB'):
        r += float(v[:2])
    elif v.endswith('GB'):
        r += float(v[:2]) * 1024
    else:
        r += 1
    return r


async def stats(domain: str, user: str, passwd: str):
    brw: browser.Browser = await launch({'headless': False, 'args': ['--no-sandbox']})
    pge: page.Page = await brw.newPage()
    await pge.goto(domain + '/user/login?redirect_to=')
    await pge.type('#user_name', user)
    await pge.type('#password', passwd)
    await pge.click('form button')
    await pge.goto(domain + '/admin/repos')
    res = {
        'size': 0
    }
    # 从第一页开始卷
    pid = 1
    while True:
        print('提取第 %d 页' % pid)
        tgt = domain + '/admin/repos?page=%d&q=&tab=' % pid
        await pge.goto(tgt)
        # 筛选数据
        for e in await pge.querySelectorAll('tbody tr > td:nth-child(9)'):
            cnt = await pge.evaluate('(each) => each.textContent', e)
            res['size'] += CapacityStrToMB(cnt)
        # 判断是否是最后有一页
        nxt = await pge.querySelector('.pagination .item:nth-last-child(2)')
        href = await pge.evaluate('(tgt) => tgt.href', nxt)
        if href != '':
            pid += 1
            print('提取下一页')
        else:
            print('提取结束')
            break
    return res

if __name__ == "__main__":
    domain = sys.argv[1]
    user = sys.argv[2]
    passwd = sys.argv[3]
    loop = asyncio.get_event_loop()
    res = loop.run_until_complete(stats(domain, user, passwd))
    print(json.dumps(res))
